version: '3'
services:
  api-gateway:
    build: ./api-gateway
    command: sh -c "npm start"
    container_name: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - auth-service
      - jadwal-service
      - sensor-service
    environment:
      DB_USER: root
      MYSQL_PASSWORD: ""
      DB_PASSWORD: ""
      DB_NAME: db_authService
      DB_HOST: mysql
      DB_PORT: 3306
      MYSQL_USER: root
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  auth-service:
    build: ./services/auth-service
    command: sh -c "npx sequelize-cli db:migrate && npm start"
    container_name: auth-service
    ports:
      - "3001:3001"
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  jadwal-service:
    build: ./services/jadwal-service
    command: sh -c "npx sequelize-cli db:migrate && npm start"
    container_name: jadwal-service
    ports:
      - "3002:3002"
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  sensor-service:
    build: ./services/sensor-service
    command: sh -c "npx sequelize-cli db:migrate && npm start"
    container_name: sensor-service
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      DB_HOST: mysql
      DB_PORT: 3306
    ports:
      - "3003:3003"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M


  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  mysql:
    image: mysql:5.7
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ALLOW_EMPTY_PASSWORD: ${MYSQL_ALLOW_EMPTY_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/init:/docker-entrypoint-initdb.d
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "8081:80"
    depends_on:
      - mysql

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8088:8088"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - api-gateway
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 128M

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

volumes:
  db_data:
